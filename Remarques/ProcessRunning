-Touls les processus en cours d'exécution:
ActivityManager am = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);
        List<ActivityManager.RunningAppProcessInfo> runningAppProcessInfo = am.getRunningAppProcesses();

        for (int i = 0; i < runningAppProcessInfo.size(); i++) {
            /*
            if(runningAppProcessInfo.get(i).processName.equals("com.the.app.you.are.looking.for") {
                // si l application que vous souhaité est on cours d exec faire ça ..
            }
             */
            Log.e("prr",am.runningAppProcessInfo.get(i).processName);
        }

_________________________________________
-Le Processus (Application) currente:

<uses-permission
    android:name="android.permission.PACKAGE_USAGE_STATS"
    tools:ignore="ProtectedPermissions" />



if (Build.VERSION.SDK_INT >= 21) {

//i faut d abord activé le usage state manager pour obtenir les app current avec:
AppOpsManager appOps = (AppOpsManager)getSystemService(Context.APP_OPS_SERVICE);
        int mode = appOps.checkOpNoThrow(AppOpsManager.OPSTR_GET_USAGE_STATS,
                android.os.Process.myUid(),getPackageName());
        if( mode != AppOpsManager.MODE_ALLOWED){
            Intent intent = new Intent(Settings.ACTION_USAGE_ACCESS_SETTINGS);
            startActivity(intent);
        }

                        String currentApp = null;
                        UsageStatsManager usm = (UsageStatsManager)getSystemService(Context.USAGE_STATS_SERVICE);
                        long time = System.currentTimeMillis();
                        List<UsageStats> applist = usm.queryUsageStats(UsageStatsManager.INTERVAL_DAILY, time - 1000 * 1000, time);
                        if (applist != null && applist.size() > 0) {
                            SortedMap<Long, UsageStats> mySortedMap = new TreeMap<>();
                            for (UsageStats usageStats : applist) {
                                mySortedMap.put(usageStats.getLastTimeUsed(), usageStats);
                            }
                            if (mySortedMap != null && !mySortedMap.isEmpty()) {
                                currentApp = mySortedMap.get(mySortedMap.lastKey()).getPackageName();
                            }
                        }
                        Log.e("prr", "Current App in foreground is: " + currentApp);



                    }
                    else {

                        ActivityManager manager = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);
                        String mm=(manager.getRunningTasks(1).get(0)).topActivity.getPackageName();
                        Log.e("prr", "Current App in foreground is: " + mm);

                    }


_______________________________________

-get list of installed Apps:

final PackageManager pm = getPackageManager();
         //get a list of installed apps.
        List<ApplicationInfo> packages = pm.getInstalledApplications(PackageManager.GET_META_DATA);

        for (ApplicationInfo packageInfo : packages) {

//filtrage des applications , que les app qui sont de type launcher ..
           if( pm.getLaunchIntentForPackage(packageInfo.packageName) != null) {
                Log.e("prr", "Installed package :" + packageInfo.packageName);
                Drawable icon = getContext().getPackageManager().getApplicationIcon(packageInfo.packageName); //icon d application ..
                //Log.e("prr", "Source dir : " + packageInfo.sourceDir);
                //Log.e("prr", "Launch Activity :" +pm.getLaunchIntentForPackage(packageInfo.packageName));
            }
        }

______________________________________
-get Application name from package:
final PackageManager pm = getPackageManager();

                       
                            ApplicationInfo ai=pm.getApplicationInfo(NomDePackage,0);
                            currentApp= (String) pm.getApplicationLabel(ai);
                            Log.e("appp",currentApp);


