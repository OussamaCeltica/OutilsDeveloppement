-Fermer le clavier:

 View view = this.getCurrentFocus();
        if (view != null) {
            view.clearFocus();
            InputMethodManager imm = (InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);
            imm.hideSoftInputFromWindow(view.getWindowToken(), 0);
//on peut remplace le view par l id de notre EditText ..
        }

-ouvrir:
InputMethodManager imm = (InputMethodManager)   getSystemService(Context.INPUT_METHOD_SERVICE);
imm.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0);

-Détécter l ouvrage et la fermeture de clavier:

final FrameLayout body=((FrameLayout)findViewById(R.id.body_reg));

        body.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() {
            @Override
            public void onGlobalLayout() {
                Rect measureRect = new Rect(); //you should cache this, onGlobalLayout can get called often
                body.getWindowVisibleDisplayFrame(measureRect);
                // measureRect.bottom is the position above soft keypad
                int keypadHeight = body.getRootView().getHeight() - measureRect.bottom;

                if (keypadHeight > 0) {
                    // keyboard is opened

                    ((LinearLayout)findViewById(R.id.faireRglmt_butt)).setVisibility(View.GONE);
                } else {
                    //store keyboard state to use in onBackPress if you need to

                    ((LinearLayout)findViewById(R.id.faireRglmt_butt)).setVisibility(View.VISIBLE);
                }
            }
        });
